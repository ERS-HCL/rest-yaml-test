initGroup:
  variables:
    content-type: application/json
    uuid: null
                
dataGroup:
  constants:
    foo: |
            {
              "foo": [
                       "v1",
                       "v2"
                     ]
            }
    
testGroup:
- name: test group to show uri, method, parameters, headers and cookies usages
  tests:
  - name: simple test 1
    request:
      uri: /get
      method: get
      parameters:
        foo: foo1
        baz: baz1
      headers:
        content-type: ${content-type}
        uuid: uuid-1
      cookies:
        cookie1: kookie2
        cookie2: kookie3
      body: |
        {"a":"b"  "c":"d"}
    response:
      status: 200
      headers:
        content-type: application/json
        
- name: test group to show to show how to test body asserts
  tags: ["bodyAssert"]
  tests:
  - name: simple body asset test
    request:
      uri: /get?foo=v1&foo=v2
      method: get
      encodeURL: false
      headers:
        content-type: application/json
        uuid: uuid-1
    response:
      status: 200
      variables:
        contentType: header.content-type
        uuid: body.headers.Uuid
      body:
        asserts:
        - jsonPath: args.foo
          value: '["v1","v2"]'
        - regex: gzip
          value: '["gzip"]'
        - jsonPath: args
          value: |
            {
              "foo": [
                       "v1",
                       "v3"
                     ]
            }          
        - jsonPath: args
          value: ${foo}
        - jsonPath: headers.Host
          value: httpbin.org
        - jsonPath: headers.Uuid
          value: uuid-1
          
- name: body assert
  tags: ["bodyAssert"]
  tests:
  - name: pipe
    tags: ["pipe"]
    request:
      uri: /get?foo=vs1&foo=v2
      method: get
    response:
      status: 200
      body:
        asserts:
        - select: jsonpath args | jsonpath foo
          value: |
                 ["vs1","v2"]
        - select: jsonpath args | jsonpath foo | regex.find v\d # regex.find returns array of value matched
          value: '["v2"]'
        - select: jsonpath args | jsonpath foo | regex.match v\d # regex.match returns number of matches
          value: 1

  - name: json-unit
    tags: ["jsonUnit"]
    request:
      uri: /get?foo=vs1&foo=v2
      method: get
    response:
      status: 200
      body:
        asserts:
        - select: jsonpath $
          value: | #read https://github.com/lukas-krecan/JsonUnit
                 {"origin":"${json-unit.regex}(([0-1]?[0-9]{1,2}\\.)|(2[0-4][0-9]\\.)|(25[0-5]\\.)){3}(([0-1]?[0-9]{1,2})|(2[0-4][0-9])|(25[0-5]))" , "headers":{"Host":"httpbin.org", "Connection":"${json-unit.any-string}"}}
                 